callback
timing methods

onchange 	An HTML element has been changed
onclick 	The user clicks an HTML element
onmouseover 	The user moves the mouse over an HTML element
onmouseout 	The user moves the mouse away from an HTML element
onkeydown 	The user pushes a keyboard key
onload          The browser has finished loading the page

innerHTML

<h1 onclick="changeText(this)">Click on this text!</h1>

<script>
function changeText(id) {
    id.innerHTML = "Ooops!";
}
</script>

 <script>
document.getElementById("myBtn").onclick = displayDate;
</script> 

 <input type="text" id="fname" onchange="upperCase()">

document.addEventListener("click", function(){
    document.getElementById("demo").innerHTML = "Hello World";

Tip: Use the document.removeEventListener() method to remove an event handler that has been attached with the addEventListener() method.

Tip: Use the element.addEventListener() method to attach an event handler to a specified element.

document.addEventListener("mouseover", myFunction);
document.addEventListener("click", someOtherFunction);
document.addEventListener("mouseout", someOtherFunction);

document.addEventListener("mousemove", myFunction);

// Remove the event handler from the document
document.removeEventListener("mousemove", myFunction);

 var x = document.getElementsByClassName("example").length;

x[i].style.backgroundColor = "red";

 var x = document.getElementsByTagName("STYLE"); 

The querySelector() method returns the first element that matches a specified CSS selector(s) in the document.
 document.querySelector("p");
 document.querySelector("#demo").innerHTML = "Hello World!";
 document.querySelector("div > p");
 document.querySelector("a[target]");
document.querySelector("h2, h3").style.backgroundColor = "red";

document.getElementById("myP").style.cssText = "background-color:pink;font-size:55px;border:2px dashed green;color:white;"
});
